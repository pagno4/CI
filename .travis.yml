# Creiamo una nostra chiave
# Quello che inizia con & è un puntatore (poi lo possiamo usare ovunque nel file). Al puntatore gli diamo un valore
# La creazione delle chiavi prende il nome di Ancor
_reference_os: &reference_os
  linux

_reference_arch: &reference_arch
  amd64

_reference_jdk: &reference_jdk
  JDK="adopt@1.11"

language: minimal  # Linguaggio

git: # operazioni su git
  depth: false  # Disabilitiamo lo shallow clone (cloniamo per gli ultimi N commit)
  autocrlf: input

os: # Esecuzione OS
  - *reference_os
  - osx
  - windows

arch: # Architetture utilizzate
  - *reference_arch
  - arm64

dist: focal

env: # Variabili d' ambiente
  global:
    - GRAVIS_REPO="https://github.com/DanySK/Gravis-CI.git"
    - GRAVIS="$HOME/gravis"
    - TERM="dumb" # Info per terminale
  matrix:
    - *reference_jdk
    - JDK="adopt@1.8"
    - JDK="adopt@1.14"
    - JDK="adopt-openj9@1.11"
    - JDK="adopt-openj9@1.8"
    - JDK="adopt-openj9@1.14"


# Stage da eseguire
# Prima viene eseguito compile, poi kotlin style check, complete .... , ...
# Mi permette di suddividere delle fasi tra job (vedi esecuzione job su Travis)
stages:
  - Compile
  - Kotlin Style Check
  - Complete Check
  - Test
  - name: Delivery
    if: repo = pagno4/CI

# Creo un 'puntatore' più complesso
_reference_machine: &reference_machine
  arch: *reference_arch
  os: *reference_os
  env: *reference_jdk

_workspace_name: &workspace_name
  compile_env

_import_workspace: &import_workspace
  workspaces:
    use: *workspace_name

jobs:

  # Job esclusi
  exclude: # Escludiamo l' esecuzione dei job con questa combinazione
    - arch: arm64
      env: JDK="adopt-openJ9@1.8"
    - arch: arm64
      env: JDK="adopt-openJ9@1.14"

    # Includo il puntatore _reference_machine (uso l' operatore <<)
    - <<: *reference_machine
      stage: Test

  # Job inclusi
  include:
    - <<: *reference_machine
      stage: Compile
      script: ./gradlew compileKotlin --parallel

      # Creazione di un Workspaces (salviamo delle info)
      # Per esempio le cache di gradle
      workspaces:
        create:
        name: *workspace_name
        paths:
          - "$TRAVIS_BUILD_DIR"
          - "$HOME/.gradle"

    - <<: *reference_machine
      stage: Kotlin Style Check
      <<: *import_workspace
      script: ./gradlew detekt ktlintCheck --parallel

    - <<: *reference_machine
      stage: Complete Check
      <<: *import_workspace
      script:
        - travis_retry ./gradlew check

    - stage: Delivery
      script: "true"


# Se non si specifica niente i job fanno
# 1- before_install
# 2- install
# 3- esecuzione script
# (altrimenti specifico in job include/exclude cosa fare/non fare)
before_install:
  - travis_retry git clone --depth 1 $GRAVIS_REPO $GRAVIS
  - source $GRAVIS/install-jdk

install: "true"

script: # List di script
  - travis_retry ./gradlew check
